#!/usr/bin/env ruby

this_file = File.symlink?(__FILE__) ? File.readlink(__FILE__) : __FILE__
dir = File.expand_path(File.join(this_file, "..", "..", "lib"))
$:.unshift dir unless $:.include?(dir)

argv = ARGV.dup

require "pew"

# If ruby gems has loaded, reload the bin with rubygems disabled.
# This feels like a hack.
begin
  Gem::RUBYGEMS_DIR
  # puts "Ruby gems is loaded. Reloading with it disabled. This is a hack"
  Kernel.exec Pew.command_without_rubygems this_file, argv
rescue NameError
end

require 'pew/setup'

command = argv.shift

if command == "install"
  # If no gems are passed to the command line, try and install
  # from Gemfile.
  if argv.empty?
    PEW.gems.each do |gem|
      puts "Installing #{gem.name} (#{gem.version})"
      gem.install unless gem.installed?
    end
  else
    argv.each do |gem_path|
      gem = Gem.new(File.expand_path(gem_path))
      puts "Installing #{gem.name} (#{gem.version})"
      gem.install unless gem.installed?
    end
  end
elsif command == "irb" || command == "console"
  $:.unshift Dir.pwd # Add the current dir to the load path for fun times
  require 'irb'
  ARGV.clear # otherwise all script parameters get passed to IRB
  IRB.start
else
  if command == "exec"
    script = argv[0]
    args   = argv[1..argv.length]
  else
    script = command
    args   = argv
  end

  PEW.exec script, args
end
